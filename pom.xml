<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>dk.lyngby</groupId>
    <artifactId>3sem-rest-api</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <junit.version>5.9.1</junit.version>
        <testcontainers.version>1.18.0</testcontainers.version>
        <restassured.version>5.3.0</restassured.version>
        <hibernate-version>6.2.4.Final</hibernate-version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
    </properties>

    <dependencies>

        <!--   R.E.S.T     -->

        <dependency>
            <groupId>com.sparkjava</groupId>
            <artifactId>spark-core</artifactId>
            <version>2.9.4</version>
        </dependency>

        <!--   Utilities     -->

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>
        <dependency>
            <!-- https://github.com/cdimascio/dotenv-java       -->
            <groupId>io.github.cdimascio</groupId>
            <artifactId>dotenv-java</artifactId>
            <version>2.3.2</version>
        </dependency>


        <!--   Security     -->

        <dependency>
            <!--  https://nimbusds.com/products/nimbus-jose-jwt   -->
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
            <version>9.0.1</version>
        </dependency>
        <dependency>
            <groupId>org.mindrot</groupId>
            <artifactId>jbcrypt</artifactId>
            <version>0.4</version>
        </dependency>
        <dependency>
            <!-- Used for setting database name in pom.xml -->
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>properties-maven-plugin</artifactId>
            <version>1.1.0</version>
        </dependency>

        <!--  DB    -->

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.6.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate.orm</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate-version}</version>
        </dependency>
        <dependency>
            <!--   Hibernate Connection Pool      -->
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <version>5.0.1</version>
        </dependency>
        <dependency>
            <!--   Hibernate Connection Pool      -->
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-hikaricp</artifactId>
            <version>${hibernate-version}</version>
        </dependency>

        <!--  Logging   -->

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.4.7</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.4.7</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.7</version>
        </dependency>

        <!--  TESTING      -->

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>testcontainers</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>postgresql</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>jdbc</artifactId>
            <version>${testcontainers.version}</version>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${testcontainers.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.3.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>4.6.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>${restassured.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>json-schema-validator</artifactId>
            <version>${restassured.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <finalName>app</finalName> <!-- This is the name of the jar file -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.4.1</version>
                <configuration>
                    <transformers>
                        <transformer
                                implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                            <mainClass>dk/lyngby/Main
                            </mainClass> <!-- Here you should put the main class of your application -->
                        </transformer>
                    </transformers>
                    <filters>
                        <filter> <!-- This filter is needed to avoid a bug in the shade plugin -->
                            <artifact>*:*</artifact>
                            <excludes>
                                <exclude>META-INF/*.SF</exclude>
                                <exclude>META-INF/*.DSA</exclude>
                                <exclude>META-INF/*.RSA</exclude>
                            </excludes>
                        </filter>
                    </filters>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>

        <!--
        The maven-shade-plugin is a plugin for Apache Maven, which is a popular build automation tool primarily used for Java
        projects. The maven-shade-plugin is specifically designed to create an executable uber-JAR or fat JAR, which is a JAR
        file that contains all the dependencies required to run an application.

        In the provided code snippet, the maven-shade-plugin is configured within the <plugins> section of the Maven build
        configuration. It has a <groupId> of org.apache.maven.plugins, an <artifactId> of maven-shade-plugin,
        and a <version> of 3.4.1.

        The plugin is configured using the <configuration> element within the <plugin> block. The <transformers> section
        specifies a transformer that will be used to modify the resources within the JAR file. In this case,
        the ManifestResourceTransformer implementation is used to set the main class for the application. The <mainClass>
        element specifies the fully qualified name of the main class that should be executed when the JAR is launched.

        The <filters> section defines filters that can be used to exclude certain resources from the shaded JAR. In the given
        configuration, a filter is specified to exclude certain files (*.SF, *.DSA, and *.RSA) from the META-INF directory.
        This filter is added to avoid a bug in the shade plugin.

        The <executions> section defines the plugin execution configuration. In this case, the plugin is executed during the
        package phase of the Maven build lifecycle. The <goals> element specifies that the shade goal should be executed, which
        triggers the creation of the shaded JAR file.

        Overall, the maven-shade-plugin is used to create a self-contained JAR file that includes all the dependencies required
        to run an application. This can be useful in situations where you want to distribute your application as a single JAR
        file that can be easily executed without relying on external dependencies.
        -->